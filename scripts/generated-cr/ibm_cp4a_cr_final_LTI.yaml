###############################################################################
##
##Licensed Materials - Property of IBM
##
##(C) Copyright IBM Corp. 2020. All Rights Reserved.
##
##US Government Users Restricted Rights - Use, duplication or
##disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
##
###############################################################################
apiVersion: icp4a.ibm.com/v1
kind: ICP4ACluster
metadata:
  name: icp4adeploy
  labels:
    app.kubernetes.io/instance: ibm-dba
    app.kubernetes.io/managed-by: ibm-dba
    app.kubernetes.io/name: ibm-dba
    release: 20.0.2
spec:
  ##########################################################################
  ## This section contains the shared configuration for all CP4A components #
  ##########################################################################
  appVersion: 20.0.2
  #################################################################################################################
  ##  The contents of this template CR file reflect only the specific parameters and configuration 
  ##  settings applicable to the represented ICP4A capability. 
  ##   
  ##  These values/configuration sections are to be used when manually assembling or updating the main 
  ##  ICP4A CR that is being applied in order to install an ICP4A environment. 
  ##  
  ##  If you are in the process of preparing a new install of an ICP4A environment, 
  ##  you should merge the required values and configuration sections from this file into the   
  ##  starting point CR template: ibm_cp4a_cr_enterprise_foundation.yaml available in the
  ##  same location as this template. 
  ##  
  ##  If you updating an existing ICP4A environment, you should merge the required values and configuration
  ##  sections from this template in the main ICP4A CR file already applied in the environment.  
  ##  
  ######################################################################################################################
  shared_configuration:
    ## FileNet Content Manager (FNCM) license and possible values are: user, non-production, and production.
    ## This value could be different from the rest of the licenses.
    sc_deployment_fncm_license: "non-production"
    ## Business Automation Workflow (BAW) license and possible values are: user, non-production, and production.
    ## This value could be different from the other licenses in the CR.
    sc_deployment_baw_license: "non-production"
    ## Use this parameter to specify the license for the CP4A deployment and
    ## the possible values are: non-production and production and if not set, the license will
    ## be defaulted to production.  This value could be different from the other licenses in the CR.
    sc_deployment_license: "non-production"
    ## All CP4A components must use/share the same docker image repository.  For example, if IBM Entitlement Registry is used, then 
    ## it should be "cp.icr.io".  Otherwise, it will be a local docker registry.    
    sc_image_repository: cp.icr.io
    images:
      keytool_job_container:
        repository: cp.icr.io/cp/cp4a/ums/dba-keytool-jobcontainer
        tag: 20.0.2
      dbcompatibility_init_container:
        repository: cp.icr.io/cp/cp4a/aae/dba-dbcompatibility-initcontainer
        tag: 20.0.2
      keytool_init_container:
        repository: cp.icr.io/cp/cp4a/ums/dba-keytool-initcontainer
        tag: 20.0.2
      umsregistration_initjob:
        repository: cp.icr.io/cp/cp4a/aae/dba-umsregistration-initjob
        tag: 20.0.2
      ## All CP4A components should use this pull_policy as the default, but it can override by each component
      pull_policy: IfNotPresent
    ## All CP4A components must use/share the root_ca_secret in order for integration    
    root_ca_secret: icp4a-root-ca
    ## CP4A patterns or capabilities to be deployed. This CR represents Operational Decsision Manage "decisions" pattern
    ## that brings Decision Center, Rule Execution Server and Decision Runner, based on the user specification in the 
    ## sc_optional_components specification
    sc_deployment_patterns: "foundation,content,contentanalyzer"
    ## The optional components to be installed if listed here.
    ## This is normally populated by the deploy script based on input from the user.
    ## User can also manually specify the optional components to be deployed here.
    ## This pattern has has 3: decisionCenter, decisionRunner, and decisionServerRuntime selectable components, where 
    ## decisionRuntime represent the Rule Execution Server. 
    ## If decisionCenter is set, you also have to set the 'odm_configuration.decisionCenter.enabled' flag to true to install it.
    ## If decisionRunner is set, you also have to set the 'odm_configuration.decisionRunner.enabled' flag to true to install it.
    ## If decisionServerRuntime is set, you also have to set the 'odm_configuration.decisionRuntime.enabled' flag to true to install it.
    sc_optional_components: "cmis,ums"
    ## The deployment type as selected by the user.  Possible values are: demo, enterprise.    
    sc_deployment_type: "enterprise"
    ## The platform to be deployed specified by the user.  Possible values are: OCP, ROKS,IKS and other.  This is normally populated by the User script 
    ## based on input from the user.    
    sc_deployment_platform: "ROKS"
    ## For OCP, this is used to create route, you should input a valid hostname in the required field.
    sc_deployment_hostname_suffix: "{{ meta.namespace }}.cp-automation.lti-gsilab-ibmcloud.com"
    ## If the root certificate authority (CA) key of the external service is not signed by the operator root CA key, provide the TLS certificate of 
    ## the external service to the component's truststore.
    trusted_certificate_list: []
    ## On OCP 3.x and 4.x, the User script will populate these three (3) parameters based on your input for "enterprise" deployment.
    ## If you manually deploying without using the User script, then you would provide the different storage classes for the slow, medium
    ## and fast storage parameters below.  If you only have 1 storage class defined, then you can use that 1 storage class for all 3 parameters.   
    storage_configuration:
      sc_slow_file_storage_classname: cp4a-file-retain-bronze-gid
      sc_medium_file_storage_classname: cp4a-file-retain-silver-gid
      sc_fast_file_storage_classname: cp4a-file-retain-gold-gid
    ##############################################################################################
    # Kafka client configuration for IBM Business Automation Insights and other ICP4A products.
    #
    # The customization of the following 4 parameters is "<Required>" only if you have
    # specificed "bai" as part of the sc_optional_components to specify that Business Automation
    # Insights must be installed.
    #
    # Otherwise, if Business Automation Insights is not being installed, there is no need to configure
    # these parameters and they can be kept empty.
    ##############################################################################################
    kafka_configuration:
      # Comma-separated list of hosts:port for connection to the Kafka cluster.
      # This field is mandatory for any Kafka configuration.
      bootstrap_servers: "minimal-non-prod-kafka-external-bootstrap:9091"
      # Value for the Kafka security.protocol property
      # Valid values: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL. Default: PLAINTEXT.
      security_protocol: "PLAINTEXT"
      # Value for the Kafka sasl.mechanism property
      # Valid values: PLAIN, SCRAM-SHA-512. Default: PLAIN.
      sasl_mechanism:
      # If the Kafka server requires authentication or uses SSL communications, the value of this field
      # must provide the name of a secret that holds the following keys as base64-encoded strings:
      # kafka-username: Kafka username; leave empty if no authentication
      # kafka-password: Kafka password; leave empty if no authentication
      # kafka-server-certificate: server certificate for SSL communications; leave empty if SSL protocol is not used
      connection_secret_name:
    ## Specify the RunAsUser for the security context of the pod.  This is usually a numeric value that correponds to a user ID.
    sc_run_as_user:
    ## Shared encryption key secret name that is used for Workstream Services and Process Federation Server integration.
    encryption_key_secret: icp4a-shared-encryption-key
    ## Enable/disable ECM (FNCM) / BAN initialization (e.g., creation of P8 domain, creation/configuration of object stores, 
    ## creation/configuration of CSS servers, and initialization of Navigator (ICN)).  If the "initialize_configuration" section 
    ## is defined in the CR, then that configuration will take precedence overriding this parameter.  Note that if you are upgrading or
    ## migrating, set this parameter to "false" since the env has been previously initialized.
    sc_content_initialization: true
    ## Enable/disable the ECM (FNCM) / BAN verification (e.g., creation of test folder, creation of test document, 
    ## execution of CBR search, and creation of Navigator demo repository and desktop).  If the "verify_configuration" 
    ## section is defined in the CR, then that configuration will take precedence overriding this parameter.  Note that if you are upgrading or
    ## migrating, set this parameter to "false" since the env has been previously verified.
    sc_content_verification: true
    image_pull_secrets:
    - admin.registrykey
  ## The beginning section of LDAP configuration for CP4A
  ldap_configuration:
    ## The possible values are: "IBM Security Directory Server" or "Microsoft Active Directory"
    lc_selected_ldap_type: "IBM Security Directory Server"
    ## The name of the LDAP server to connect
    lc_ldap_server: "158.176.66.252"
    ## The port of the LDAP server to connect.  Some possible values are: 389, 636, etc.
    lc_ldap_port: "389"
    ## The LDAP bind secret for LDAP authentication.  The secret is expected to have ldapUsername and ldapPassword keys.  Refer to Knowledge Center for more info.
    lc_bind_secret: ldap-bind-secret
    ## The LDAP base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_base_dn: "O=LTI,C=US"
    ## Enable SSL/TLS for LDAP communication. Refer to Knowledge Center for more info.
    lc_ldap_ssl_enabled: false
    ## The name of the secret that contains the LDAP SSL/TLS certificate.
    lc_ldap_ssl_secret_name: "<Required>"
    ## The LDAP user name attribute.  One possible value is "*:cn" for TDS and "user:sAMAccountName" for AD. Refer to Knowledge Center for more info.
    lc_ldap_user_name_attribute: "*:cn"
    ## The LDAP user display name attribute. One possible value is "cn" for TDS and "sAMAccountName" for AD. Refer to Knowledge Center for more info.
    lc_ldap_user_display_name_attr: "cn"
    ## The LDAP group base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_group_base_dn: "O=LTI,C=US"
    ## The LDAP group name attribute.  One possible value is "*:cn" for TDS and "*:cn" for AD. Refer to Knowledge Center for more info.
    lc_ldap_group_name_attribute: "*:cn"
    ## The LDAP group display name attribute.  One possible value for both TDS and AD is "cn". Refer to Knowledge Center for more info.
    lc_ldap_group_display_name_attr: "cn"
    ## The LDAP group membership search filter string.  One possible value is "(&(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)(objectclass=groupOfURLs))" for TDS
    ## and "(&(cn=%v)(objectcategory=group))" for AD.
    lc_ldap_group_membership_search_filter: "(|(&(objectclass=groupofnames)(member={0}))(&(objectclass=groupofuniquenames)(uniquemember={0})))"
    ## The LDAP group membership ID map.  One possible value is "groupofnames:member" for TDS and "memberOf:member" for AD.
    lc_ldap_group_member_id_map: "groupofnames:member"
    ## The User script will uncomment the section needed based on user's input from User script.  If you are deploying without the User script,
    ## uncomment the necessary section (depending if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
    # ad:
    #   lc_ad_gc_host: "<Required>"
    #   lc_ad_gc_port: "<Required>"
    #   lc_user_filter: "(&(samAccountName=%v)(objectClass=user))"
    #   lc_group_filter: "(&(samAccountName=%v)(objectclass=group))"
    tds:
      lc_user_filter: "(&(cn=%v)(objectclass=person))"
      lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"
      ## User script should only uncomment this section if External Share if selected as an optional component.
      ## If you are deploying without the User script, uncomment the necessary section (depending
      ## if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
      # ext_ldap_configuration:
      #   lc_selected_ldap_type: "IBM Security Directory Server"
      #   lc_ldap_server: "<Required>"
      #   lc_ldap_port: "<Required>"
      #   lc_bind_secret: ldap-bind-secret
      #   lc_ldap_base_dn: "<Required>"
      #   lc_ldap_ssl_enabled: true
      #   lc_ldap_ssl_secret_name: "<Required>"
      #   lc_ldap_user_name_attribute: "<Required>"
      #   lc_ldap_user_display_name_attr: "<Required>"
      #   lc_ldap_group_base_dn: "<Required>"
      #   lc_ldap_group_name_attribute: "<Required>"
      #   lc_ldap_group_display_name_attr: "cn"
      #   lc_ldap_group_membership_search_filter: "<Required>"
      #   lc_ldap_group_member_id_map: "<Required>"
    ## User script will uncomment the section needed based on user's input from User script.
    ## If you are deploying without the User script, uncomment the necessary section (depending
    ## if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.    
    # ad:
    ## This is the Global Catalog port for the LDAP
    #   lc_ad_gc_host: "<Required>"
    #   lc_ad_gc_port: "<Required>"
    #   lc_user_filter: "(&(samAccountName=%v)(objectClass=user))"
    #   lc_group_filter: "(&(samAccountName=%v)(objectclass=group))"
    # tds:
    #   lc_user_filter: "(&(cn=%v)(objectclass=person))"
    #   lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"
  ## The beginning section of database configuration for CP4A
  datasource_configuration:
    
    ## The database configuration for UMS (User Management Service)
    dc_ums_datasource:
      ## Provide the database type from your infrastructure. The possible values are "db2" or "oracle".  This should be the same as the
      ## other datasource configuration above. Db2 with HADR is automatically activated if dc_ums_oauth_alternate_hosts and dc_ums_oauth_alternate_ports
      ## are set.
      dc_ums_oauth_type: "db2"
      ## Provide the database server name or IP address of the database server.
      dc_ums_oauth_host: "158.176.66.252"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521".
      dc_ums_oauth_port: "50000"
      ## Provide the name of the database for UMS.  For example: "UMSDB"
      dc_ums_oauth_name: "UMSDB"
      dc_ums_oauth_schema: OAuthDBSchema
      dc_ums_oauth_ssl: false
      dc_ums_oauth_ssl_secret_name:
      dc_ums_oauth_driverfiles:
      dc_ums_oauth_alternate_hosts:
      dc_ums_oauth_alternate_ports:
      ## The database database configuration for teamserver
      ## Provide the database type from your infrastructure. The possible values are "db2" or "oracle".  This should be the same as the
      ## other datasource configuration above. Db2 with HADR is automatically activated if dc_ums_teamserver_alternate_hosts and dc_ums_teamserver_alternate_ports
      ## are set.
      dc_ums_teamserver_type: "db2"
      dc_ums_teamserver_host: "158.176.66.252"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521".
      dc_ums_teamserver_port: "50000"
      ## Provide the name of the database for UMS teamserver.  For example: "UMSDB"
      dc_ums_teamserver_name: "UMSDB"
      dc_ums_teamserver_ssl: true
      dc_ums_teamserver_ssl_secret_name:
      dc_ums_teamserver_driverfiles:
      dc_ums_teamserver_alternate_hosts:
      dc_ums_teamserver_alternate_ports:
    ## The database configuration for the GCD datasource for CPE
    dc_gcd_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle".
      dc_database_type: "db2"
      ## The GCD non-XA datasource name.  The default value is "FNGCDDS".
      dc_common_gcd_datasource_name: "FNGCDDS"
      ## The GCD XA datasource name. The default value is "FNGCDDSXA".
      dc_common_gcd_xa_datasource_name: "FNGCDDSXA"
      ## Provide the database server name or IP address of the database server.
      database_servername: "158.176.66.252"
      ## Provide the name of the database for the GCD for CPE.  For example: "GCDDB"
      database_name: "GCDDB"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "50000"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_gcd_jdbc_url: "<Required>"
    
      ## If the database type is Db2 HADR, then complete the rest of the parameters below.
      ## Provide the database server name or IP address of the standby database server.
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
    
    ## The database configuration for the object store 1 (OS1) datasource for CPE
    dc_os_datasources:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle".  This should be the same as the 
      ## GCD configuration above.
    - dc_database_type: "db2"
      ## The OS1 non-XA datasource name.  The default value is "FNOS1DS".
      dc_common_os_datasource_name: "FNOS1DS"
      ## The OS1 XA datasource name.  The default value is "FNOS1DSXA".
      dc_common_os_xa_datasource_name: "FNOS1DSXA"
      ## Provide the database server name or IP address of the database server.  This should be the same as the 
      ## GCD configuration above.
      database_servername: "158.176.66.252"
      ## Provide the name of the database for the object store 1 for CPE.  For example: "OS1DB"
      database_name: "OS1DB"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "50000"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_os_jdbc_url: "<Required>"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
    ## The database configuration for ICN (Navigator) - aka BAN (Business Automation Navigator)
    dc_icn_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle".  This should be the same as the 
      ## GCD and object store configuration above.
      dc_database_type: "db2"
      ## Provide the ICN datasource name.  The default value is "ECMClientDS".
      dc_common_icn_datasource_name: "ECMClientDS"
      database_servername: "158.176.66.252"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "50000"
      ## Provide the name of the database for ICN (Navigator).  For example: "ICNDB"
      database_name: "ICNDB"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_icn_jdbc_url: "<Required>"
    
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
    ## The database configuration for ACA (Content Analyzer)
    dc_ca_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle".    
      dc_database_type: "db2"
      ## Provide the primary database server name and if your database server name cannot be resolvable by DNS, then provide the corresponding IP address for the `database_IP` parameter below.
      database_servername: "158.176.66.252"
      ## Provide the name of the BASE database for ACA.  For example: "BASECA"
      database_name: "BASECA"
      ## Provide the names of the TENANT databases for ACA.
      tenant_databases:
      - "CATENANT"
      ## Provide the database server port.  For Db2, the default is "50000".   For Oracle, the default is "1521".
      database_port: "50000"
      ## Enable SSL/TLS for database communication. Refer to Knowledge Center for more info.
      dc_database_ssl_enabled: false
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################

      ## Provide the standby database server name and if your standby database server name cannot be resolvable by DNS, then provide the corresponding IP address for the `dc_hadr_standby_ip` parameter below.      
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
      ## Provide the primary database server IP address if database_servername cannot be resolved by DNS.
      database_ip: "<Required>"
      ## Provide the standby database server IP address if dc_hadr_standby_servername cannot be resolved by DNS.      
      dc_hadr_standby_ip: "<Required>"
    dc_odm_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "oracle".
      dc_database_type: "db2"
      ## Provide the database server name or IP address of the database server.
      database_servername: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      dc_common_database_port: "<Required>"
      ## Provide the name of the database for ODM.  For example: "ODMDB"
      dc_common_database_name: "<Required>"
      ## The name of the secret that contains the credentials to connect to the database.
      dc_common_database_instance_secret: "<Required>"
  #-----------------------------------------------------------------------
  # Configuration for IBM Business Automation Application Studio required for some ICP4A capabilities.
  #-----------------------------------------------------------------------
  bastudio_configuration:
    #Adjust this one if you created the secret with name other than the default
    admin_secret_name: "{{ meta.name }}-bas-admin-secret"
    #Provide BAStudio default administrator ID
    admin_user: "ltiadmin"
    database:
      #Provide the database server hostname for BAStudio use
      host: "158.176.66.252"
      #Provide the database name for BAStudio use
      # The database provided should be created by the BAStudio SQL script template.
      name: "BASTUDIO"
      #Provide the database server port for BAStudio use
      port: "50000"
      # If you want to enable database automatic client reroute (ACR) for HADR, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
      alternative_host:
      alternative_port:
      type: db2
    #-----------------------------------------------------------------------
    #  App Engine Playback Server (playback_server) can be only one instance. This is different from App Engine (where application_engine_configuration is a list and you can deploy multiple instances).
    #-----------------------------------------------------------------------
    playback_server:
      #Adjust this one if you created the secret with name other than the default
      admin_secret_name: playback-server-admin-secret
      #Provide playback application engine default administrator ID
      admin_user: "ltiadmin"
      database:
        #Provide the database server hostname for playback application engine use
        host: "158.176.66.252"
        #Provide the database name for playback application engine use
        name: "AESTUDIO"
        #Provide the database server port for playback application engine use
        port: "50000"
        ## If you set up DB2 HADR and want to use it, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
        alternative_host:
        alternative_port:
        type: db2
  ########################################################################
  ########   IBM User and Group Management Service configuration  ########
  ########################################################################
  ums_configuration:
    images:
      ums:
        repository: cp.icr.io/cp/cp4a/ums/ums
        tag: 20.0.2
  